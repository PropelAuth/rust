/*
 * propelauth
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use std::collections::HashMap;

use serde_json::Value;

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UpdateOrgRequest {
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "can_setup_saml", skip_serializing_if = "Option::is_none")]
    pub can_setup_saml: Option<bool>,
    #[serde(rename = "max_users", skip_serializing_if = "Option::is_none")]
    pub max_users: Option<i32>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<HashMap<String, Value>>,
    #[serde(rename = "domain", skip_serializing_if = "Option::is_none")]
    pub domain: Option<String>,
    #[serde(rename = "autojoin_by_domain", skip_serializing_if = "Option::is_none")]
    pub autojoin_by_domain: Option<bool>,
    #[serde(rename = "restrict_to_domain", skip_serializing_if = "Option::is_none")]
    pub restrict_to_domain: Option<bool>,
    #[serde(rename = "legacy_org_id", skip_serializing_if = "Option::is_none")]
    pub legacy_org_id: Option<String>,
    // TODO: This should be added once supported in the FE.
    // #[serde(rename = "require_2fa_by", skip_serializing_if = "Option::is_none")]
    // pub require_2fa_by: Option<chrono::DateTime<chrono::Utc>>,
}

impl UpdateOrgRequest {
    pub fn new() -> UpdateOrgRequest {
        UpdateOrgRequest {
            name: None,
            can_setup_saml: None,
            max_users: None,
            metadata: None,
            domain: None,
            autojoin_by_domain: None,
            restrict_to_domain: None,
            legacy_org_id: None,
            // require_2fa_by: None,
        }
    }
}
